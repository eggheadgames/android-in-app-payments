plugins {
    id 'com.android.library'
    //id 'com.novoda.static-analysis' version '1.2'
    //id "com.github.spotbugs" version '3.0.0'
    id 'kotlin-android'
    id 'maven-publish'
    //id 'kotlin-android-extensions'
}

group = 'com.github.eggheadgames'
//version = project.versionName

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    //buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        //versionCode 23 //rootProject.ext.versionCode
        //versionName "3.0.1" //rootProject.ext.versionName
    }

    flavorDimensions "appstore"
    productFlavors {
        google {
            dimension "appstore"
        }
        amazon {
            dimension "appstore"
        }
    }
    lint {
        disable 'GradleDependency', 'AllowBackup'
        warningsAsErrors true
    }
    namespace 'com.eggheadgames.inapppayments'

    // publish releases for google and amazon flavors
    publishing {
        multipleVariants("library") {
            includeBuildTypeValues("release")
            includeFlavorDimensionAndValues("appstore", "google", "amazon")
            //withSourcesJar()
            //withJavadocJar()
        }
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.8.0"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    amazonApi 'com.amazon.device:amazon-appstore-sdk:3.0.2'
    googleApi 'com.android.billingclient:billing:5.0.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:2.24.0'
}

afterEvaluate {
    publishing {
        publications {
            library(MavenPublication) {
                from components.library
                artifactId "$project.name"
            }
            /*
            android.libraryVariants.all { variant ->
                if (!variant.name.toLowerCase().contains("debug")) {
                    "$variant.name"(MavenPublication) {
                        from components."$variant.name"
                        artifactId "$project.name"
                        artifact source: sourcesJar, classifier: variant.flavorName
                    }
                }
            }
            */
        }
    }
}

/*
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}
*/

/*
staticAnalysis {
    penalty {
        maxErrors = 0
        maxWarnings = 0
    }
    pmd {
        ignoreFailures = false
        reportsDir = file("$project.buildDir/outputs/")
    }
    spotbugs {
        ignoreFailures = false
        reportsDir = file("$project.buildDir/outputs/")
        reportLevel = "medium"
        effort = "max"

        excludeFilter rootProject.file('library/findbugs_excludes.xml')
    }
}
*/
